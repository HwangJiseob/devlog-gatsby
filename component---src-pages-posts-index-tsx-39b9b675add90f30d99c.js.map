{"version":3,"sources":["webpack:///./src/components/search.tsx","webpack:///./src/pages/posts/index.tsx"],"names":["gray5","openColor","Search","props","allPosts","data","allMdx","nodes","tag","location","state","useState","filteredData","query","setState","option","setOption","debounceSearch","handleOptionChange","useCallback","e","target","value","handleInputChange","filter","post","frontmatter","description","series","title","tags","series_result","toLowerCase","includes","description_result","title_result","tags_result","join","hasSearchResults","posts","useEffect","document","getElementsByTagName","querySelector","setAttribute","className","css","searchInput","type","aria-label","placeholder","onChange","select","style","marginLeft","length","post_container","map","node","idx","excerpt","date","postcard","key","fluid","thumbnail","childImageSharp","datetime","title_container","to","makePostPath","post_title","index","tag_button","onClick","dangerouslySetInnerHTML","__html","nightSky","ChineseViolet","Cetacean_Blue","St_Patrick_Blue","Posts","Layout"],"mappings":"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","file":"component---src-pages-posts-index-tsx-39b9b675add90f30d99c.js","sourcesContent":["/** @jsx jsx */\r\nimport React, { useState, useCallback, useEffect } from 'react'\r\nimport { Link } from \"gatsby\"\r\nimport { debounce } from 'lodash'\r\nimport { jsx, css } from '@emotion/react'\r\nimport GatsbyImage from 'gatsby-image'\r\n\r\nimport { makePostPath } from '../libs/makePath'\r\nimport { openColor, nightSky } from '../libs/config'\r\n\r\nconst { gray5 } = openColor\r\n\r\n// 출처: https://www.aboutmonica.com/blog/create-gatsby-blog-search-tutorial\r\nexport const Search = ({ props }) => {\r\n  const allPosts = props.data.allMdx.nodes\r\n  const tag = props?.location?.state?.tag\r\n\r\n  const emptyQuery = \"\"\r\n  const [state, setState] = useState({\r\n    filteredData: [],\r\n    query: tag ? tag : emptyQuery,\r\n  })\r\n  const [ option, setOption ] = useState(tag ? \"tag\" : \"all\")\r\n\r\n  const debounceSearch = debounce((query, filteredData) => {\r\n    setState({\r\n      query,\r\n      filteredData,\r\n    })\r\n  }, 200);\r\n\r\n  const handleOptionChange = useCallback(e => {\r\n    setOption(e.target.value)\r\n    handleInputChange({target: { value: state.query } }, e.target.value)\r\n  }, [ state ])\r\n\r\n  const handleInputChange = useCallback((e, option) => {\r\n    const query = e.target.value\r\n    const { data } = props\r\n    const posts = allPosts || []\r\n    const filteredData = posts.filter(post => {\r\n      const { description, series, title, tags } = post.frontmatter\r\n      const series_result = series?.toLowerCase().includes(query?.toLowerCase())\r\n      const description_result = description?.toLowerCase().includes(query?.toLowerCase())\r\n      const title_result = title?.toLowerCase().includes(query?.toLowerCase())\r\n      const tags_result = tags && tags.join(\"\").toLowerCase().includes(query?.toLowerCase())\r\n      switch(option){\r\n        case \"series\":\r\n          return series_result\r\n        case \"description\":\r\n          return description_result\r\n        case \"title\":\r\n          return title_result\r\n        case \"tag\":\r\n          return tags_result\r\n        default:\r\n          return series_result || description_result || title_result || tags_result\r\n      }\r\n    })\r\n    debounceSearch(query, filteredData)\r\n  }, [])\r\n\r\n  const { filteredData, query } = state\r\n  const hasSearchResults = filteredData && query !== emptyQuery\r\n  const posts = hasSearchResults ? filteredData : allPosts\r\n\r\n  useEffect(()=>{\r\n    const select = document.getElementsByTagName('select')[0]\r\n    const tag_option = select.querySelector('option[value=\"tag\"')\r\n    tag_option.setAttribute('selected', 'true')\r\n    if(tag){\r\n      handleInputChange({target: { value: tag } }, option)\r\n      const search = document.querySelector('.searchInput')\r\n      search.setAttribute(\"value\", tag)\r\n    }\r\n  }, [])\r\n\r\n  return (\r\n    <>\r\n      <input\r\n        className=\"searchInput\"\r\n        css={searchInput}\r\n        type=\"text\"\r\n        aria-label=\"Search\"\r\n        placeholder=\"search posts...\"\r\n        onChange={(e)=>{handleInputChange(e, option)}}\r\n      />\r\n      <select onChange={handleOptionChange} css={select}>\r\n        <option value=\"all\">all</option>\r\n        <option value=\"tag\">tag</option>\r\n        <option value=\"title\">title</option>\r\n        <option value=\"description\">description</option>\r\n        <option value=\"series\">series</option>\r\n      </select>\r\n      <span style={{marginLeft: \"10px\"}}>\r\n        Found {hasSearchResults ? filteredData.length : 'all' }\r\n      </span>\r\n      <div css={post_container}>\r\n        {posts.map((node, idx) => {\r\n          const { excerpt } = node\r\n          const { title, tags, series, date, description } = node.frontmatter\r\n          return (\r\n            <article className=\"postcard\" css={postcard} key={idx}>\r\n              <header>\r\n                <GatsbyImage fluid={node.frontmatter?.thumbnail?.childImageSharp?.fluid} />\r\n                <div css={datetime}>{date}</div>\r\n                <h2 css={title_container}>\r\n                  <Link to={makePostPath(series, title)} css={post_title}>{title}</Link>\r\n                </h2>\r\n              </header>\r\n              <div css={css`padding: 0 10px;`}>\r\n                {tags.map((tag, index)=>{\r\n                  return(\r\n                    <span \r\n                      css={tag_button}\r\n                      onClick={()=>{\r\n                        handleInputChange({ target: { value: tag } }, option )\r\n                        const search = document.querySelector('.searchInput')\r\n                        search.setAttribute(\"value\", tag)\r\n                      }}\r\n                      key={index}\r\n                    >#{tag}\r\n                    </span>\r\n                  )\r\n                })}\r\n              </div>\r\n              <section css={css`padding: 0 10px;`}>\r\n                <p\r\n                  dangerouslySetInnerHTML={{\r\n                    __html: description || excerpt,\r\n                  }}\r\n                />\r\n              </section>\r\n            </article>\r\n          )\r\n        })}\r\n      </div>\r\n    </>\r\n  )\r\n}\r\nconst searchInput = css`\r\n  all: unset;\r\n  border-bottom: 2px solid ${nightSky.ChineseViolet};\r\n  line-height: 2;\r\n  padding-left: 5px;\r\n  color: ${nightSky.ChineseViolet};\r\n  &::placeholder{\r\n    padding-left: 5px;\r\n    color: ${nightSky.ChineseViolet};\r\n  }\r\n`\r\n\r\nconst select = css`\r\n  margin-left: 10px;\r\n  height: 32px;\r\n  background: none;\r\n  color: ${nightSky.ChineseViolet};\r\n  border: 2px solid ${nightSky.ChineseViolet};\r\n  &:hover {\r\n    cursor: pointer;\r\n  }\r\n\r\n  option {\r\n    color: ${nightSky.ChineseViolet};\r\n    border: 2px solid ${nightSky.ChineseViolet};\r\n  }\r\n`\r\n\r\nexport const postcard = css`\r\n  overflow-x: hidden;\r\n  border-radius: 10px;\r\n  transition: transform 0.5s, box-shadow 0.5s;\r\n  &:hover{\r\n    transition: transform 0.5s, box-shadow 0.5s;\r\n    transform: translate3d(0px, -5px, 0px);\r\n    /* box-shadow: ${gray5} 0px 1px 1px, ${gray5} 0px 4px 4px; */\r\n    box-shadow: 0 8px 32px 0 ${gray5};\r\n  }\r\n`\r\n\r\nexport const title_container = css`\r\n  padding: 0 10px;\r\n`\r\n\r\nexport const datetime = css`\r\n  margin: 10px 0;\r\n  padding: 0 10px;\r\n`\r\n\r\nexport const post_container = css`\r\n  margin-top: 20px;\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, minmax(240px, 1fr));\r\n  /* grid-template-rows: masonry; */\r\n  grid-gap: 15px;\r\n`\r\n\r\nexport const post_title = css`\r\n  color: inherit;\r\n  text-decoration: none;\r\n  /* transition: color ease 0.5s; */\r\n  &:hover{\r\n    color: ${nightSky.Cetacean_Blue};\r\n    transition: color ease 0.5s;\r\n  }\r\n`\r\n\r\nexport const tag_button = css`\r\n  cursor: pointer;\r\n  font-weight: bold;\r\n  color: ${gray5};\r\n  margin-right: 10px;\r\n  transition: color ease 0.5s;\r\n  &:hover {\r\n    color: ${nightSky.St_Patrick_Blue};\r\n    transition: color ease 0.5s;\r\n  }\r\n`","import React from 'react'\r\nimport { graphql } from \"gatsby\"\r\n\r\nimport { Layout } from '../../components/layout/Layout'\r\nimport { makePostPath } from '../../libs/makePath'\r\nimport { Search } from '../../components/search'\r\n\r\n// 출처: https://www.aboutmonica.com/blog/create-gatsby-blog-search-tutorial\r\n\r\nconst Posts = (props) => {\r\n  // re-render issue 때문에 search input과 search에 따른 post render 코드 전체를\r\n  // Search component로 옮겼다.\r\n  return (\r\n    <Layout>\r\n      <h1>\r\n        Posts\r\n      </h1>\r\n      <Search props={props} />\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default Posts\r\n\r\nexport const query = graphql`\r\n  {\r\n    allMdx(sort: {order: DESC, fields: frontmatter___date}) {\r\n      nodes {\r\n        excerpt(pruneLength: 200)\r\n        id\r\n        frontmatter {\r\n          title\r\n          description\r\n          series\r\n          date(formatString: \"MMMM DD, YYYY\")\r\n          tags\r\n          thumbnail {\r\n            childImageSharp {\r\n              fluid {\r\n                base64\r\n                aspectRatio\r\n                src\r\n                srcSet\r\n                sizes\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`"],"sourceRoot":""}